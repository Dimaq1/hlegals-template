/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
  font-weight:bold;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
  font-weight:500;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
  font-weight:normal;
  font-style:normal;
}
.slider__header.-active{
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}

.team__page-link::after, .services__page-link::after{
  display:inline-block;
  background-repeat:no-repeat;
  width:12px;
  height:12px;
  background-position:5px 1px;
}

.team__indicators, .slider__indicators{
  display:flex;
  gap:14px;
  justify-content:center;
}

.team__indicator, .slider__indicator{
  width:16px;
  height:16px;
  background-color:#24A3FF;
  border-radius:8px;
  opacity:0.2;
}
.-active.team__indicator, .-active.slider__indicator{
  opacity:1;
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
}

a{
  text-decoration:none;
  color:#24A3FF;
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  border:0;
}

.page-header{
  background:linear-gradient(42deg, #323264 15%, #323264 51%, #7A425E 88%);
  position:relative;
}
.page-header::before{
  content:"";
  background-image:url(../img/Frame2.svg);
  background-repeat:no-repeat;
  background-position:50% 100%;
  background-size:86.4vh;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.page-header::after{
  content:"";
  position:absolute;
  top:75%;
  right:0;
  bottom:0;
  left:0;
  background:linear-gradient(to top, #323264 0%, transparent 100%);
}
.page-header__grid{
  position:absolute;
  top:0;
  right:0;
  left:0;
  display:grid;
  grid-template-columns:auto 1fr;
  z-index:2;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  min-height:100vh;
  display:flex;
  align-items:center;
  justify-content:center;
  overflow:hidden;
}
.page-header__content-title{
  margin:0;
  position:absolute;
  top:50%;
  left:50%;
  transform:translate(-50%, -50%);
  width:min(100% - 40px, 620px);
  max-width:620px;
  font-size:38px;
  line-height:45px;
  text-align:center;
  color:#ffffff;
  font-weight:500;
  z-index:1;
}
.page-header__content-image{
  transform:translate(5px, 29.2%);
}
.page-header__button{
  position:absolute;
  bottom:20px;
  left:50%;
  z-index:2;
  cursor:pointer;
  transform:translateX(-50%);
}

.actions{
  display:flex;
  gap:20px;
  align-items:center;
}
.actions__languages{
  display:flex;
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  gap:2px;
}
.actions__languages-link{
  border-radius:8px;
  padding:5px 6px;
}
.actions__languages-link.-active{
  background:#F0145A;
  color:#ffffff;
}
.actions__locations-link{
  font-style:normal;
}
.actions__phones-link{
  font-weight:700;
}

.menu__btn{
  width:18px;
  height:22.5px;
  position:relative;
  margin-left:auto;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.5s ease-in-out;
  -moz-transition:0.5s ease-in-out;
  -o-transition:0.5s ease-in-out;
  transition:0.5s ease-in-out;
  cursor:pointer;
}
.menu__btn-row{
  display:block;
  position:absolute;
  height:2px;
  width:100%;
  background:#ffffff;
  border-radius:3px;
  opacity:1;
  left:0;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.25s ease-in-out;
  -moz-transition:0.25s ease-in-out;
  -o-transition:0.25s ease-in-out;
  transition:0.25s ease-in-out;
}
.menu__btn-row:nth-child(1){
  top:0px;
}
.menu__btn-row:nth-child(2){
  top:6px;
}
.menu__btn-row:nth-child(3){
  top:6px;
}
.menu__btn-row:nth-child(4){
  top:12px;
}
.menu__btn.-active span:nth-child(1){
  top:9px;
  width:0%;
  left:50%;
}
.menu__btn.-active span:nth-child(2){
  -webkit-transform:rotate(45deg);
  -moz-transform:rotate(45deg);
  -o-transform:rotate(45deg);
  transform:rotate(45deg);
}
.menu__btn.-active span:nth-child(3){
  -webkit-transform:rotate(-45deg);
  -moz-transform:rotate(-45deg);
  -o-transform:rotate(-45deg);
  transform:rotate(-45deg);
}
.menu__btn.-active span:nth-child(4){
  top:9px;
  width:0%;
  left:50%;
}
.menu__list{
  margin:0;
  padding:0;
  list-style:none;
  display:flex;
  justify-content:flex-end;
  gap:15px;
}
.menu__link{
  font-size:18px;
  color:#ffffff;
  display:block;
  padding:0.25em 0;
}

.experience{
  padding:80px 0;
  background-color:#323264;
}

.slider{
  display:flex;
}
.slider__headers{
  position:relative;
  flex-basis:0;
  flex-grow:2;
  display:flex;
  gap:20px;
  flex-direction:column;
}
.slider__header{
  position:relative;
  color:#B3B3BA;
  user-select:none;
}
.slider__header.-active{
  display:block;
}
.slider__notes{
  color:#ffffff;
  flex-basis:0;
  flex-grow:2.7;
  display:flex;
  align-items:center;
}
.slider__note{
  position:absolute;
  z-index:-1000;
  opacity:0;
  max-width:600px;
}
.slider__note.-active{
  position:static;
  z-index:inherit;
  opacity:1;
}
.slider__title{
  font-weight:500;
  line-height:1.1875;
}
.slider__description{
  line-height:1.43;
}
.services{
  position:relative;
  background:linear-gradient(213deg, #323264 12%, #323264 57%, #643E72 87%);
  border-radius:0 0 12px 12px;
  padding-bottom:80px;
}
.services::before{
  content:"";
  position:absolute;
  left:40px;
  right:40px;
  top:100%;
  background:#E7E7F2;
  border-radius:0px 0px 12px 12px;
  height:20px;
}
.services::after{
  content:"";
  position:absolute;
  left:20px;
  right:20px;
  top:100%;
  background:#CACADB;
  border-radius:0px 0px 12px 12px;
  height:10px;
}
.services__page-link{
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#ffffff;
  opacity:0.5;
}
.services__page-link::after{
  content:"";
  background-image:url(../img/LinkArrow.svg);
}
.services__title{
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 0.1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  width:max-content;
  max-width:100%;
}
.services__grid{
  display:grid;
  gap:58px 48px;
}
.services-item__title{
  grid-area:ttl;
  line-height:1.16;
  color:#24A3FF;
  font-weight:500;
}
.services-item__description{
  grid-area:dsc;
  font-family:"TT Norms";
  font-size:18px;
  line-height:1.44;
  color:#ffffff;
  font-weight:400;
}
.services-item__icon{
  grid-area:icn;
  order:-1;
}
.services-item__image{
  width:100%;
}

.team{
  margin-bottom:40px;
}
.team__content{
  background:#F5F5FA;
  border-radius:12px;
  margin-bottom:20px;
}
.team__page-link{
  font-weight:700;
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  margin-bottom:3px;
}
.team__page-link::after{
  content:"";
  background-image:url(../img/LinkArrowRegular.svg);
}
.team__quote{
  font-weight:700;
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 0.1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}
.team__author{
  font-weight:400;
  font-size:18px;
  line-height:1.16;
  color:#B3B3BA;
}
.team__note{
  font-weight:400;
  font-size:16px;
  line-height:1.38;
  color:#B3B3BA;
}
.cases__grid{
  border-radius:12px;
  display:grid;
  grid-template-columns:316px 113px 340px 114px 433px;
  grid-template-rows:57px 196px 198px;
  gap:2px;
}
.cases__title{
  font-size:14px;
  line-height:1.21;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#F0145A;
  grid-column:1/3;
  grid-row:1;
  background:#F5F5FA;
  border-radius:12px 0px 0px 0px;
  padding:20px;
}
.cases__wrapper-one{
  grid-row:2;
  grid-column:1/3;
  padding-right:5px;
}
.cases__wrapper-two{
  grid-row:1/3;
  grid-column:3/5;
}
.cases__wrapper-three{
  grid-row:1/3;
  border-radius:0px 12px 0px 0px;
}
.cases__wrapper-four{
  border-radius:0px 0px 0px 12px;
}
.cases__wrapper-five{
  grid-column:2/4;
}
.cases__wrapper-six{
  grid-column:4/6;
  border-radius:0px 0px 12px 0px;
}

.cases-item{
  background:#F5F5FA;
  padding:20px;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
  gap:20px;
}
.cases-item__description{
  font-size:24px;
  line-height:1.16;
  color:#686887;
  font-weight:500;
}
.cases-item__link{
  font-size:18px;
  line-height:1.44;
  color:#B3B3BA;
}
@media (min-width: 576px){
  .page-header__grid{
    padding-top:50px;
    grid-template-areas:"logo actions" "logo menu";
    gap:10px 20px;
  }
  .actions{
    justify-content:flex-end;
  }
  .actions a{
    color:#ffffff;
  }
}
@media (min-width: 768px){
  .menu__btn{
    display:none;
  }
  .slider{
    gap:80px;
  }
  .slider__headers{
    align-items:flex-end;
  }
  .slider__headers::after{
    content:"";
    width:4px;
    height:100%;
    background-color:#E6E6F0;
    position:absolute;
    right:-42px;
  }
  .slider__header.-active::after{
    content:"";
    width:4px;
    top:0;
    bottom:0;
    background-color:#F0145A;
    position:absolute;
    right:-42px;
    z-index:1;
  }
  .slider__indicators{
    display:none;
  }
  .services{
    margin-bottom:60px;
  }
  .services-item{
    display:flex;
    flex-direction:column;
  }
  .services-item__title{
    font-size:24px;
    margin-bottom:15px;
  }
  .services-item__icon{
    max-width:92px;
    max-height:92px;
    margin-bottom:20px;
  }
  .team__content{
    max-height:500px;
    display:flex;
  }
  .team__picture-mobile{
    display:none;
  }
  .team__author{
    margin-bottom:5px;
  }
}
@media (min-height: 800px){
  .page-header__content-image{
    height:62vh;
  }
}
@media (min-width: 992px){
  .slider__header{
    font-size:42px;
    line-height:1.19;
    text-align:right;
  }
  .slider__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .slider__description{
    font-size:21px;
  }
  .services__title{
    font-size:42px;
    margin-bottom:68px;
  }
  .team__item{
    padding:40px;
  }
  .team__quote{
    margin-bottom:20px;
    font-size:42px;
  }
}
@media (min-width: 1200px){
  .services__grid{
    grid-template-columns:repeat(3, 1fr);
  }
}
@media (max-width: 1199.8px) and (min-width: 768px){
  .services__grid{
    grid-template-columns:repeat(2, 1fr);
  }
}
@media (max-width: 991.8px){
  .actions__socials{
    display:none;
  }
  .slider__description{
    font-size:18px;
    margin-bottom:10px;
  }
  .team__item{
    padding:20px;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .slider__header{
    font-size:32px;
    line-height:1.19;
    text-align:right;
  }
  .slider__title{
    font-size:28px;
    margin-bottom:20px;
  }
  .services__title{
    font-size:38px;
    margin-bottom:50px;
  }
  .team__quote{
    margin-bottom:20px;
    font-size:32px;
  }
}
@media (max-width: 767.8px){
  .page-header::before{
    display:none;
  }
  .actions__locations{
    display:none;
  }
  .menu__list{
    display:none;
    position:absolute;
    right:0;
    background:#323264;
    border-radius:5px;
    padding:30px;
    box-shadow:10px 10px 20px #000000;
  }
  .slider{
    flex-direction:column;
    gap:10px;
  }
  .slider__headers{
    align-items:flex-start;
  }
  .slider__header{
    font-size:14px;
    letter-spacing:1px;
    line-height:17px;
    display:none;
    text-transform:uppercase;
  }
  .slider__title{
    font-size:22px;
    margin-bottom:15px;
  }
  .services{
    margin-bottom:40px;
  }
  .services__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .services__grid{
    grid-template-columns:1fr;
  }
  .services-item{
    display:grid;
    align-items:center;
    grid-template-areas:"icn ttl" "dsc dsc";
    grid-template-columns:64px 1fr;
    gap:10px;
  }
  .services-item__title{
    font-size:18px;
  }
  .services-item__icon{
    max-width:64px;
  }
  .team__picture{
    display:none;
  }
  .team__quote{
    margin-bottom:10px;
    font-size:32px;
  }
  .team__caption{
    display:grid;
    grid-template-areas:"pct atr" "pct txt";
    grid-template-columns:70px 1fr;
    align-items:center;
  }
  .team__picture-mobile{
    display:block;
    grid-area:pct;
  }
  .team__author{
    grid-area:atr;
  }
  .team__note{
    grid-area:txt;
  }
}
@media (max-width: 575.8px){
  .page-header__grid{
    padding-top:20px;
    grid-template-areas:"actions actions" "logo menu";
    gap:20px;
    align-items:center;
  }
  .actions{
    justify-content:space-between;
  }
  .actions a{
    color:#B3B3BA;
  }
  .logo__image{
    width:77px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */