/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
  font-weight:bold;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
  font-weight:500;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
  font-weight:normal;
  font-style:normal;
}
.slider__header.-active{
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}

.publications__page-link::after, .team__page-link::after, .services__page-link::after{
  display:inline-block;
  background-repeat:no-repeat;
  width:12px;
  height:12px;
  background-position:5px 1px;
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
}

a{
  text-decoration:none;
  color:#24A3FF;
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.container--sm{
  width:min(100% - 40px, 1095px);
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  border:0;
}

.indicators{
  display:flex;
  gap:14px;
  justify-content:center;
}

.indicator{
  width:16px;
  height:16px;
  background-color:#24A3FF;
  border-radius:8px;
  opacity:0.2;
}
.indicator.-active{
  opacity:1;
}

.block{
  display:block;
}

.page-header{
  background:linear-gradient(42deg, #323264 15%, #323264 51%, #7A425E 88%);
  position:relative;
}
.page-header::before{
  content:"";
  background-image:url(../img/BgHeader.svg);
  background-repeat:no-repeat;
  background-position:50% 100%;
  background-size:86.4vh;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.page-header::after{
  content:"";
  position:absolute;
  top:75%;
  right:0;
  bottom:0;
  left:0;
  background:linear-gradient(to top, #323264 0%, transparent 100%);
}
.page-header__grid{
  position:absolute;
  top:0;
  right:0;
  left:0;
  display:grid;
  grid-template-columns:auto 1fr;
  z-index:2;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  min-height:100vh;
  display:flex;
  align-items:center;
  justify-content:center;
  overflow:hidden;
}
.page-header__content-title{
  margin:0;
  position:absolute;
  top:50%;
  left:50%;
  transform:translate(-50%, -50%);
  width:min(100% - 40px, 620px);
  max-width:620px;
  font-size:38px;
  line-height:45px;
  text-align:center;
  color:#ffffff;
  font-weight:500;
  z-index:1;
}
.page-header__content-image{
  transform:translate(5px, 29.2%);
}
.page-header__button{
  position:absolute;
  bottom:20px;
  left:50%;
  z-index:2;
  cursor:pointer;
  transform:translateX(-50%);
}

.actions{
  display:flex;
  gap:20px;
  align-items:center;
}
.actions__languages{
  display:flex;
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  gap:2px;
}
.actions__languages-link{
  border-radius:8px;
  padding:5px 6px;
}
.actions__languages-link.-active{
  background:#F0145A;
  color:#ffffff;
}
.actions__locations-link{
  font-style:normal;
}
.actions__phones-link{
  font-weight:700;
}

.menu__btn{
  width:18px;
  height:22.5px;
  position:relative;
  margin-left:auto;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.5s ease-in-out;
  -moz-transition:0.5s ease-in-out;
  -o-transition:0.5s ease-in-out;
  transition:0.5s ease-in-out;
  cursor:pointer;
}
.menu__btn-row{
  display:block;
  position:absolute;
  height:2px;
  width:100%;
  background:#ffffff;
  border-radius:3px;
  opacity:1;
  left:0;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.25s ease-in-out;
  -moz-transition:0.25s ease-in-out;
  -o-transition:0.25s ease-in-out;
  transition:0.25s ease-in-out;
}
.menu__btn-row:nth-child(1){
  top:0px;
}
.menu__btn-row:nth-child(2){
  top:6px;
}
.menu__btn-row:nth-child(3){
  top:6px;
}
.menu__btn-row:nth-child(4){
  top:12px;
}
.menu__btn.-active span:nth-child(1){
  top:9px;
  width:0%;
  left:50%;
}
.menu__btn.-active span:nth-child(2){
  -webkit-transform:rotate(45deg);
  -moz-transform:rotate(45deg);
  -o-transform:rotate(45deg);
  transform:rotate(45deg);
}
.menu__btn.-active span:nth-child(3){
  -webkit-transform:rotate(-45deg);
  -moz-transform:rotate(-45deg);
  -o-transform:rotate(-45deg);
  transform:rotate(-45deg);
}
.menu__btn.-active span:nth-child(4){
  top:9px;
  width:0%;
  left:50%;
}
.menu__list{
  margin:0;
  padding:0;
  list-style:none;
  display:flex;
  justify-content:flex-end;
  gap:15px;
}
.menu__link{
  font-size:18px;
  color:#ffffff;
  display:block;
  padding:0.25em 0;
}

.experience{
  padding:80px 0;
  background-color:#323264;
}

.slider{
  display:flex;
}
.slider__headers{
  position:relative;
  flex-basis:0;
  flex-grow:2;
  display:flex;
  gap:20px;
  flex-direction:column;
}
.slider__header{
  position:relative;
  color:#B3B3BA;
  user-select:none;
}
.slider__header.-active{
  display:block;
}
.slider__notes{
  color:#ffffff;
  flex-basis:0;
  flex-grow:2.7;
  display:flex;
  align-items:center;
}
.slider__note{
  position:absolute;
  z-index:-1000;
  opacity:0;
  max-width:600px;
}
.slider__note.-active{
  position:static;
  z-index:inherit;
  opacity:1;
}
.slider__title{
  font-weight:500;
  line-height:1.1875;
}
.slider__description{
  line-height:1.43;
}

.services{
  position:relative;
  background:linear-gradient(213deg, #323264 12%, #323264 57%, #643E72 87%);
  border-radius:0 0 12px 12px;
  padding-bottom:80px;
}
.services::before{
  content:"";
  position:absolute;
  left:40px;
  right:40px;
  top:100%;
  background:#E7E7F2;
  border-radius:0px 0px 12px 12px;
  height:20px;
}
.services::after{
  content:"";
  position:absolute;
  left:20px;
  right:20px;
  top:100%;
  background:#CACADB;
  border-radius:0px 0px 12px 12px;
  height:10px;
}
.services__page-link{
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#ffffff;
  opacity:0.5;
}
.services__page-link::after{
  content:"";
  background-image:url(../img/LinkArrow.svg);
}
.services__title{
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  width:max-content;
  max-width:100%;
}
.services__grid{
  display:grid;
  gap:58px 48px;
}
.services-item__title{
  grid-area:ttl;
  line-height:1.16;
  color:#24A3FF;
  font-weight:500;
}
.services-item__description{
  grid-area:dsc;
  font-family:"TT Norms";
  font-size:18px;
  line-height:1.44;
  color:#ffffff;
  font-weight:400;
}
.services-item__icon{
  grid-area:icn;
  order:-1;
}
.services-item__image{
  width:100%;
}

.team{
  margin-bottom:40px;
}
.team__content{
  background:#F5F5FA;
  border-radius:12px;
  margin-bottom:20px;
}
.team__page-link{
  font-weight:700;
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  margin-bottom:3px;
}
.team__page-link::after{
  content:"";
  background-image:url(../img/LinkArrowRegular.svg);
}
.team__quote{
  font-weight:700;
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
}
.team__author{
  font-weight:400;
  font-size:18px;
  line-height:1.16;
  color:#B3B3BA;
}
.team__note{
  font-weight:400;
  font-size:16px;
  line-height:1.38;
  color:#B3B3BA;
}

.cases{
  margin-bottom:30px;
}
.cases__grid{
  display:grid;
  gap:2px;
}
.cases__title{
  font-size:14px;
  line-height:1.21;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#F0145A;
  background:#F5F5FA;
  padding:20px;
}
.cases__wrapper-one{
  padding-right:5px;
}

.cases-item{
  background:#F5F5FA;
  padding:20px;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
  gap:20px;
}
.cases-item__description{
  line-height:1.16;
  color:#686887;
  font-weight:500;
}
.cases-item__link{
  font-size:18px;
  line-height:1.44;
  color:#B3B3BA;
}

.clients__title{
  font-size:14px;
  line-height:1.21;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#323264;
  text-align:center;
  margin-bottom:30px;
}
.clients__grid{
  display:grid;
}
.clients-item{
  display:flex;
  align-items:center;
  justify-content:center;
}
.clients-item:first-of-type{
  background:#1C4280;
}
.clients-item:nth-of-type(2){
  background:#143646;
}
.clients-item:nth-of-type(3){
  background:#F48B30;
}
.clients-item:nth-of-type(4){
  background:#9E4DC3;
}
.clients-item:nth-of-type(5){
  background:#FD9339;
}
.clients-item:nth-of-type(6){
  background:#E2E2E4;
}
.clients-item:nth-of-type(7){
  background:#C71C36;
}
.clients-item:nth-of-type(8){
  background:#DCF3F9;
}
.clients-item:nth-of-type(9){
  background:#EAEAEA;
}
.clients-item:nth-of-type(10){
  background:#282240;
}
.clients-item:nth-of-type(11){
  background:#1D4568;
}
.clients-item:last-of-type{
  background:#000000;
}
.clients-item__image{
  object-fit:cover;
  width:100%;
  height:100%;
}

.publications{
  background:#F5F5FA;
  position:relative;
  overflow:hidden;
}
.publications__inner{
  margin-bottom:3px;
}
.publications__page-link{
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
}
.publications__page-link::after{
  content:"";
  background-image:url(../img/LinkArrowRegular.svg);
}
.publications__title{
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  width:max-content;
  max-width:100%;
}
.publications__button{
  background:#24A3FF;
  box-shadow:0px 0px 20px rgba(36, 163, 255, 0.5);
  border-radius:12px;
  color:#ffffff;
  font-weight:700;
  font-size:14px;
  line-height:1.21;
  display:flex;
  justify-content:center;
  align-items:center;
}

.publications-item{
  max-width:414px;
  border-radius:8px;
  background:#ffffff;
}
.publications-item__picture{
  max-width:100%;
}
.publications-item__image{
  max-width:100%;
}
.publications-item__title{
  font-weight:500;
  font-size:18px;
  line-height:1.16;
  color:#24A3FF;
  margin-bottom:10px;
}
.publications-item__date-day{
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#B3B3BA;
}
.publications-item__description{
  font-weight:400;
  font-size:16px;
  line-height:1.38;
  color:#000000;
}

.page-footer{
  padding:32px 0 40px;
  background:#F5F5FA;
}
.page-footer__content{
  display:flex;
  position:relative;
}
.page-footer__content::before{
  content:"";
  position:absolute;
  top:-34px;
  height:4px;
  width:100%;
  background-color:#E6E6F0;
}
.page-footer__notes{
  font-size:16px;
  line-height:1.18;
  color:#B3B3BA;
}

.contacts__locations{
  display:flex;
  align-items:center;
  margin-bottom:20px;
}
.contacts__locations-address{
  font-style:normal;
  font-size:16px;
  line-height:1.18;
  color:#323264;
  font-weight:500;
}
.contacts__locations-map{
  font-style:normal;
  font-weight:700;
  font-size:12px;
  line-height:1.16;
  letter-spacing:1px;
  text-transform:uppercase;
}
.contacts__feedback{
  display:flex;
  gap:20px;
  align-items:center;
}
.contacts__phones-link{
  font-weight:700;
  font-size:16px;
  line-height:1.18;
  color:#46466E;
}
.contacts__email-link{
  font-weight:700;
  font-size:16px;
  line-height:1.18;
}

.about-header__grid{
  display:grid;
  grid-template-columns:auto 1fr;
}
.about-header__logo{
  grid-area:logo;
}
.about-header__menu{
  grid-area:menu;
}
.about-header__actions{
  grid-area:actions;
}

.about-actions{
  display:flex;
  gap:20px;
  align-items:center;
}
.about-actions__languages{
  display:flex;
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  gap:2px;
}
.about-actions__languages-link{
  border-radius:8px;
  padding:5px 6px;
}
.about-actions__languages-link.-active{
  background:#F0145A;
  color:#ffffff;
}
.about-actions__locations-link{
  font-style:normal;
}
.about-actions__phones-link{
  font-weight:700;
}

.about-menu__btn{
  width:18px;
  height:22.5px;
  position:relative;
  margin-left:auto;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.5s ease-in-out;
  -moz-transition:0.5s ease-in-out;
  -o-transition:0.5s ease-in-out;
  transition:0.5s ease-in-out;
  cursor:pointer;
}
.about-menu__btn-row{
  display:block;
  position:absolute;
  height:2px;
  width:100%;
  background:#323264;
  border-radius:3px;
  opacity:1;
  left:0;
  -webkit-transform:rotate(0deg);
  -moz-transform:rotate(0deg);
  -o-transform:rotate(0deg);
  transform:rotate(0deg);
  -webkit-transition:0.25s ease-in-out;
  -moz-transition:0.25s ease-in-out;
  -o-transition:0.25s ease-in-out;
  transition:0.25s ease-in-out;
}
.about-menu__btn-row:nth-child(1){
  top:0px;
}
.about-menu__btn-row:nth-child(2){
  top:6px;
}
.about-menu__btn-row:nth-child(3){
  top:6px;
}
.about-menu__btn-row:nth-child(4){
  top:12px;
}
.about-menu__btn.-active span:nth-child(1){
  top:9px;
  width:0%;
  left:50%;
}
.about-menu__btn.-active span:nth-child(2){
  -webkit-transform:rotate(45deg);
  -moz-transform:rotate(45deg);
  -o-transform:rotate(45deg);
  transform:rotate(45deg);
}
.about-menu__btn.-active span:nth-child(3){
  -webkit-transform:rotate(-45deg);
  -moz-transform:rotate(-45deg);
  -o-transform:rotate(-45deg);
  transform:rotate(-45deg);
}
.about-menu__btn.-active span:nth-child(4){
  top:9px;
  width:0%;
  left:50%;
}
.about-menu__list{
  margin:0;
  padding:0;
  list-style:none;
  display:flex;
  justify-content:flex-end;
  gap:15px;
}
.about-menu__link{
  font-size:18px;
  display:block;
  padding:0.25em 0;
  font-weight:500;
}
.about-menu__link.-active{
  padding:0.25em 0 0;
  color:#F0145A;
  border-bottom:2px solid #F0145A;
}

.logo{
  display:flex;
  align-items:flex-start;
}
.logo__breadcrumbs{
  display:flex;
}
.logo__text{
  font-weight:400;
  line-height:1.18;
  color:#323264;
}
.introduction{
  max-width:641px;
  display:flex;
  flex-direction:column;
  gap:20px;
}
.introduction__title{
  font-size:42px;
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  margin:0;
}
.introduction__text{
  font-size:21px;
  line-height:1.43;
  color:#000000;
}
.advantages__content{
  display:flex;
}

.progress{
  display:flex;
  position:relative;
}
.progress::before{
  content:"";
  position:absolute;
  background-color:#E6E6F0;
}
.progress__item{
  display:grid;
  grid-template-areas:"icon title" "text text";
  gap:10px;
  grid-template-columns:23px 1fr;
  align-items:center;
  max-width:393px;
}
.progress__title{
  line-height:1.16;
  font-size:36px;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  width:max-content;
  max-width:355px;
  grid-area:title;
}
.progress__text{
  font-size:18px;
  line-height:1.16;
  color:#323264;
  grid-area:text;
}
.progress__icon{
  grid-area:icon;
  padding-top:3px;
}

.about-team{
  overflow:hidden;
}
.about-team__container{
  position:relative;
  display:flex;
  align-items:center;
  justify-content:center;
}
.about-team__title{
  position:absolute;
  text-transform:uppercase;
  color:#ffffff;
  opacity:0.8;
  text-shadow:0px 15px 30px rgba(40, 40, 86, 0.8);
  line-height:1.17;
  user-select:none;
  max-width:905px;
}
.quality__wrap{
  display:flex;
}
.quality__title{
  line-height:1.19;
  background:linear-gradient(90deg, #F0145A 1%, #EF8080 100%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  background-clip:text;
  text-fill-color:transparent;
  order:1;
}
.quality__description{
  display:flex;
  flex-direction:column;
  gap:20px;
  max-width:641px;
}
.quality__text{
  line-height:1.43;
  color:#000000;
}

.achievement{
  background:#F5F5FA;
  border-radius:12px 12px 0px 0px;
  padding:28px 0 30px;
}
.achievement__title{
  font-size:14px;
  line-height:1.21;
  text-align:center;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#323264;
  margin-bottom:30px;
}

.achievement-slider__items{
  display:flex;
  margin-bottom:30px;
}
.achievement-slider__item{
  background:#ffffff;
  border-radius:12px;
  display:flex;
  align-items:center;
  justify-content:center;
  width:300px;
}
.achievement-slider__item-link{
  display:block;
}
.achievement-slider__item-image{
  width:100%;
  height:100%;
}
@media (min-width: 480px){
  .achievement-slider__item{
    height:109px;
  }
}
@media (min-width: 576px){
  .page-header__grid{
    padding-top:50px;
    grid-template-areas:"logo actions" "logo menu";
    gap:10px 20px;
  }
  .actions{
    justify-content:flex-end;
  }
  .actions a{
    color:#ffffff;
  }
  .publications{
    max-height:111vh;
    padding:40px 0 0;
  }
  .publications::after{
    content:"";
    position:absolute;
    top:77%;
    right:0;
    bottom:0;
    left:0;
    background:linear-gradient(180deg, rgba(245, 245, 250, 0) 0%, #F5F5FA 86.5%);
  }
  .publications__button{
    position:absolute;
    bottom:40px;
    left:50%;
    transform:translateX(-50%);
    z-index:1;
    min-width:250px;
    min-height:50px;
  }
  .publications-item:nth-of-type(1){
    margin-bottom:40px;
  }
  .publications-item:nth-of-type(3){
    margin-bottom:40px;
    width:100%;
    float:left;
    break-inside:avoid;
  }
  .publications-item:nth-of-type(4){
    width:100%;
    float:left;
    break-inside:avoid;
  }
  .publications-item:nth-of-type(5){
    margin-bottom:40px;
    width:100%;
    float:left;
    break-inside:avoid;
  }
  .publications-item:nth-of-type(6){
    width:100%;
    float:left;
    break-inside:avoid;
  }
  .publications-item__content{
    max-width:372px;
    margin:0 20px;
    padding:20px 0;
  }
  .publications-item__date{
    border-bottom:4px solid #E6E6F0;
    margin-bottom:18px;
    padding-bottom:18px;
  }
  .logo{
    gap:5px;
  }
}
@media (min-width: 768px){
  .menu__btn{
    display:none;
  }
  .slider{
    gap:80px;
  }
  .slider__headers{
    align-items:flex-end;
  }
  .slider__headers::after{
    content:"";
    width:4px;
    height:100%;
    background-color:#E6E6F0;
    position:absolute;
    right:-42px;
  }
  .slider__header.-active::after{
    content:"";
    width:4px;
    top:0;
    bottom:0;
    background-color:#F0145A;
    position:absolute;
    right:-42px;
    z-index:1;
  }
  .slider__indicators{
    display:none;
  }
  .services{
    margin-bottom:60px;
  }
  .services-item{
    display:flex;
    flex-direction:column;
  }
  .services-item__title{
    font-size:24px;
    margin-bottom:15px;
  }
  .services-item__icon{
    max-width:92px;
    max-height:92px;
    margin-bottom:20px;
  }
  .team__content{
    max-height:500px;
    display:flex;
  }
  .team__picture-mobile{
    display:none;
  }
  .team__author{
    margin-bottom:5px;
  }
  .cases-item__description{
    font-size:24px;
  }
  .publications__title{
    font-size:42px;
    margin-bottom:40px;
  }
  .publications__cards{
    column-count:3;
    column-gap:40px;
  }
  .about-header__grid{
    padding-top:50px;
    grid-template-areas:"logo actions" "logo menu";
    gap:10px 20px;
  }
  .about-actions{
    justify-content:flex-end;
  }
  .about-actions a{
    color:#B3B3BA;
  }
  .advantages{
    padding:80px 0 100px;
  }
  .about-team__picture{
    width:100%;
  }
  .about-team__image{
    width:100%;
  }
  .quality{
    padding:80px 0 93px;
  }
  .quality__wrap{
    gap:40px;
  }
  .achievement-slider__item{
    padding:0 15px;
  }
  .achievement-slider__indicator.-invisible{
    display:none;
  }
}
@media (min-height: 800px){
  .page-header__content-image{
    height:62vh;
  }
}
@media (min-width: 992px){
  .slider__header{
    font-size:42px;
    line-height:1.19;
    text-align:right;
  }
  .slider__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .slider__description{
    font-size:21px;
  }
  .services__title{
    font-size:42px;
    margin-bottom:68px;
  }
  .team__item{
    padding:40px;
  }
  .team__quote{
    margin-bottom:20px;
    font-size:42px;
  }
  .cases__grid{
    grid-template-columns:minmax(auto, 316px) minmax(auto, 113px) minmax(auto, 340px) minmax(auto, 114px) minmax(auto, 433px);
    grid-template-rows:minmax(57px, auto) minmax(196px, auto) minmax(198px, auto);
  }
  .cases__title{
    grid-column:1/3;
    grid-row:1;
    border-radius:12px 0 0 0;
  }
  .cases__wrapper-one{
    grid-row:2;
    grid-column:1/3;
  }
  .cases__wrapper-two{
    grid-row:1/3;
    grid-column:3/5;
  }
  .cases__wrapper-three{
    grid-row:1/3;
    border-radius:0 12px 0 0;
  }
  .cases__wrapper-four{
    border-radius:0 0 0 12px;
  }
  .cases__wrapper-five{
    grid-column:2/4;
  }
  .cases__wrapper-six{
    grid-column:4/6;
    border-radius:0 0 12px 0;
  }
  .clients__grid{
    grid-template-columns:repeat(4, 1fr);
    grid-template-rows:minmax(auto, 120px) minmax(auto, 120px) minmax(auto, 120px);
  }
  .page-footer__content{
    justify-content:space-between;
  }
  .contacts__locations{
    gap:40px;
  }
  .about-menu__btn{
    display:none;
  }
  .logo__text{
    font-size:38px;
  }
  .advantages__content{
    gap:62px;
  }
  .progress{
    flex-direction:column;
    max-width:391px;
    gap:40px;
  }
  .progress::before{
    height:310px;
    left:-24px;
    top:7px;
    width:4px;
  }
  .quality__title{
    font-size:42px;
  }
  .quality__text{
    font-size:21px;
  }
  .achievement-slider__items{
    gap:40px;
  }
}
@media (min-width: 1200px){
  .services__grid{
    grid-template-columns:repeat(3, 1fr);
  }
  .about-team__title{
    font-size:96px;
    letter-spacing:63px;
  }
}
@media (max-width: 1199.8px) and (min-width: 768px){
  .services__grid{
    grid-template-columns:repeat(2, 1fr);
  }
}
@media (max-width: 1199.8px) and (min-width: 992px){
  .about-team__title{
    font-size:84px;
    letter-spacing:51px;
    margin-right:-51px;
  }
}
@media (max-width: 991.8px){
  .actions__socials{
    display:none;
  }
  .slider__description{
    font-size:18px;
    margin-bottom:10px;
  }
  .team__item{
    padding:20px;
  }
  .page-footer__content{
    flex-direction:column;
    align-items:center;
    gap:20px;
  }
  .about-actions__locations{
    display:none;
  }
  .about-actions__socials{
    display:none;
  }
  .about-menu__list{
    display:none;
    position:absolute;
    right:0;
    background:#323264;
    border-radius:5px;
    padding:30px;
    box-shadow:10px 10px 20px #000000;
  }
  .logo__image{
    width:120px;
  }
  .advantages__content{
    flex-direction:column;
    gap:35px;
  }
  .progress::before{
    width:100%;
    height:4px;
    top:-20px;
  }
}
@media (max-width: 991.8px) and (min-width: 576px){
  .contacts__locations{
    gap:20px;
  }
  .logo__breadcrumbs{
    max-height:40px;
  }
  .logo__text{
    font-size:28px;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .slider__header{
    font-size:32px;
    line-height:1.19;
    text-align:right;
  }
  .slider__title{
    font-size:28px;
    margin-bottom:20px;
  }
  .services__title{
    font-size:38px;
    margin-bottom:50px;
  }
  .team__quote{
    margin-bottom:20px;
    font-size:32px;
  }
  .cases__grid{
    grid-template-columns:repeat(2, 1fr);
  }
  .cases__title{
    border-radius:12px 12px 0 0;
    grid-column:1/3;
    text-align:center;
  }
  .cases__wrapper-five{
    border-radius:0 0 0 12;
  }
  .cases__wrapper-six{
    border-radius:0 0 12px 0;
  }
  .clients__grid{
    grid-template-columns:repeat(3, 1fr);
    grid-template-rows:minmax(auto, 120px) minmax(auto, 120px) minmax(auto, 120px) minmax(auto, 120px);
  }
  .introduction{
    margin-left:auto;
    margin-right:auto;
    text-align:center;
  }
  .progress{
    justify-content:space-evenly;
    gap:20px;
  }
  .progress__item{
    max-width:200px;
  }
  .about-team__title{
    font-size:70px;
    letter-spacing:37px;
    margin-right:-37px;
  }
  .quality__title{
    font-size:37px;
  }
  .quality__text{
    font-size:20px;
  }
  .achievement-slider__items{
    gap:20px;
  }
}
@media (max-width: 767.8px){
  .page-header::before{
    display:none;
  }
  .actions__locations{
    display:none;
  }
  .menu__list{
    display:none;
    position:absolute;
    right:0;
    background:#323264;
    border-radius:5px;
    padding:30px;
    box-shadow:10px 10px 20px #000000;
  }
  .slider{
    flex-direction:column;
    gap:10px;
  }
  .slider__headers{
    align-items:flex-start;
  }
  .slider__header{
    font-size:14px;
    letter-spacing:1px;
    line-height:17px;
    display:none;
    text-transform:uppercase;
  }
  .slider__title{
    font-size:22px;
    margin-bottom:15px;
  }
  .services{
    margin-bottom:40px;
  }
  .services__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .services__grid{
    grid-template-columns:1fr;
  }
  .services-item{
    display:grid;
    align-items:center;
    grid-template-areas:"icn ttl" "dsc dsc";
    grid-template-columns:64px 1fr;
    gap:10px;
  }
  .services-item__title{
    font-size:18px;
  }
  .services-item__icon{
    max-width:64px;
  }
  .team__picture{
    display:none;
  }
  .team__quote{
    margin-bottom:10px;
    font-size:32px;
  }
  .team__caption{
    display:grid;
    grid-template-areas:"pct atr" "pct txt";
    grid-template-columns:70px 1fr;
    align-items:center;
  }
  .team__picture-mobile{
    display:block;
    grid-area:pct;
  }
  .team__author{
    grid-area:atr;
  }
  .team__note{
    grid-area:txt;
  }
  .cases__grid{
    grid-template-columns:repeat(1, 1fr);
  }
  .cases__title{
    border-radius:12px 12px 0 0;
  }
  .cases__wrapper-six{
    border-radius:0 0 0 12px;
  }
  .cases-item__description{
    font-size:18px;
  }
  .clients__grid{
    grid-template-columns:repeat(2, 1fr);
    grid-template-rows:minmax(auto, 90px) minmax(auto, 90px) minmax(auto, 90px) minmax(auto, 90px) minmax(auto, 90px) minmax(auto, 90px);
  }
  .clients-item:first-of-type{
    order:-6;
  }
  .clients-item:nth-of-type(2){
    order:-5;
  }
  .clients-item:nth-of-type(3){
    order:-4;
  }
  .clients-item:nth-of-type(4){
    order:-3;
  }
  .clients-item:nth-of-type(6){
    order:5;
  }
  .clients-item:nth-of-type(7){
    order:-1;
  }
  .clients-item:nth-of-type(8){
    order:-2;
  }
  .clients-item:nth-of-type(9){
    order:1;
  }
  .clients-item:nth-of-type(10){
    order:4;
  }
  .clients-item:nth-of-type(11){
    order:3;
  }
  .clients-item:last-of-type{
    order:2;
  }
  .publications__title{
    font-size:32px;
    margin-bottom:20px;
  }
  .about-header__grid{
    padding-top:20px;
    grid-template-areas:"actions actions" "logo menu";
    gap:20px;
    align-items:center;
  }
  .about-actions{
    justify-content:space-between;
  }
  .about-actions a{
    color:#B3B3BA;
  }
  .advantages{
    padding:20px 0 34px;
  }
  .progress{
    flex-direction:column;
    gap:20px;
  }
  .about-team__picture{
    width:953px;
  }
  .about-team__image{
    width:953px;
  }
  .quality{
    padding:20px 0 40px;
  }
  .quality__wrap{
    flex-direction:column;
    gap:20px;
  }
  .quality__title{
    font-size:32px;
  }
  .quality__text{
    font-size:18px;
  }
  .achievement-slider__items{
    gap:20px;
    justify-content:space-evenly;
  }
  .achievement-slider__item.-invisible{
    display:none;
  }
}
@media (max-width: 767.8px) and (min-width: 576px){
  .publications__cards{
    column-count:2;
    column-gap:15px;
  }
  .publications-item:nth-of-type(1){
    margin-bottom:20px;
  }
  .publications-item:nth-of-type(4){
    margin-bottom:20px;
  }
  .about-team__title{
    font-size:50px;
    letter-spacing:30px;
    margin-right:-30px;
  }
}
@media (max-width: 575.8px){
  .page-header__grid{
    padding-top:20px;
    grid-template-areas:"actions actions" "logo menu";
    gap:20px;
    align-items:center;
  }
  .actions{
    justify-content:space-between;
  }
  .actions a{
    color:#B3B3BA;
  }
  .logo__image{
    width:77px;
  }
  .publications{
    padding:40px 0;
  }
  .publications__cards{
    display:flex;
    flex-direction:column;
    align-items:center;
    gap:20px;
  }
  .publications__button{
    max-width:250px;
    min-height:50px;
    margin:auto;
    margin-top:40px;
  }
  .publications-item:nth-of-type(2){
    order:1;
  }
  .publications-item:nth-of-type(4){
    display:none;
  }
  .publications-item:nth-of-type(5){
    display:none;
  }
  .publications-item:nth-of-type(6){
    display:none;
  }
  .publications-item__content{
    padding:20px;
  }
  .publications-item__description{
    display:none;
  }
  .page-footer__notes{
    max-width:329px;
    text-align:center;
  }
  .contacts__locations{
    flex-direction:column;
    gap:10px;
  }
  .contacts__feedback{
    flex-direction:column;
  }
  .logo__breadcrumbs{
    max-height:24px;
  }
  .logo__text{
    font-size:19px;
  }
  .about-team__title{
    font-size:36px;
    letter-spacing:20px;
    margin-right:-20px;
  }
}
@media (max-width: 575.8px) and (min-width: 420px){
  .publications__inner{
    text-align:center;
  }
  .publications__title{
    margin:0 auto 20px auto;
    font-size:32px;
  }
}
@media (max-width: 479.8px){
  .clients-item:first-of-type{
    padding:0 15px;
  }
  .clients-item:nth-of-type(2){
    padding:0 10px;
  }
  .clients-item:nth-of-type(3){
    padding:0 15px;
  }
  .clients-item:nth-of-type(4){
    padding:0 20px;
  }
  .clients-item:nth-of-type(5){
    padding:0 20px;
  }
  .clients-item:nth-of-type(6){
    padding:0 30px;
  }
  .clients-item:nth-of-type(7){
    padding:0 40px;
  }
  .clients-item:nth-of-type(8){
    padding:0 40px;
  }
  .clients-item:nth-of-type(9){
    padding:0 35px;
  }
  .clients-item:nth-of-type(10){
    padding:0 30px;
  }
  .clients-item:nth-of-type(11){
    padding:0 25px;
  }
  .clients-item:last-of-type{
    padding:0 30px;
  }
  .achievement-slider__item{
    height:57px;
  }
}
@media (max-width: 479.8px) and (min-width: 420px){
  .achievement-slider__item-link{
    height:40px;
  }
}
@media (max-width: 419.8px){
  .publications__title{
    font-size:32px;
  }
  .achievement-slider__item-link{
    height:31px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */